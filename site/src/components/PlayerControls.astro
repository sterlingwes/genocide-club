---

---

<div class="controls">
  <button id="moreinfo" title="More Info">
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.0688 12.35C11.8388 10.96 13.3188 10.14 14.1788 8.91C15.0888 7.62 14.5788 5.21 11.9988 5.21C10.3088 5.21 9.47876 6.49 9.12876 7.55L6.53876 6.46C7.24876 4.33 9.17876 2.5 11.9888 2.5C14.3388 2.5 15.9488 3.57 16.7688 4.91C17.4688 6.06 17.8788 8.21 16.7988 9.81C15.5988 11.58 14.4488 12.12 13.8288 13.26C13.5788 13.72 13.4788 14.02 13.4788 15.5H10.5888C10.5788 14.72 10.4588 13.45 11.0688 12.35ZM13.9988 19.5C13.9988 20.6 13.0988 21.5 11.9988 21.5C10.8988 21.5 9.99876 20.6 9.99876 19.5C9.99876 18.4 10.8988 17.5 11.9988 17.5C13.0988 17.5 13.9988 18.4 13.9988 19.5Z"
        fill="white"></path>
    </svg>
  </button>
  <button id="playtoggle" title="Play">
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.5 8.64L13.77 12L8.5 15.36V8.64ZM6.5 5V19L17.5 12L6.5 5Z"
        fill="white"></path>
    </svg>
  </button>
  <button id="pausetoggle" title="Pause">
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M6 19H10V5H6V19ZM14 5V19H18V5H14Z" fill="white"></path>
    </svg>
  </button>
  <button id="replay" title="Play">
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 6V2L7 7L12 12V8C15.31 8 18 10.69 18 14C18 17.31 15.31 20 12 20C8.69 20 6 17.31 6 14H4C4 18.42 7.58 22 12 22C16.42 22 20 18.42 20 14C20 9.58 16.42 6 12 6Z"
        fill="white"></path>
    </svg>
  </button>
  <button id="fastforward" title="Fast Forward">
    <svg
      width="26"
      height="26"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14.25 9.86L17.28 12L14.25 14.14V9.86ZM5.25 9.86L8.28 12L5.25 14.14V9.86ZM12.25 6V18L20.75 12L12.25 6ZM3.25 6V18L11.75 12L3.25 6Z"
        fill="white"></path>
    </svg>
  </button>
</div>
<style>
  .controls {
    display: none;
    position: absolute;
    top: 20px;
    right: 10px;
    z-index: 300;
    flex-direction: row;
  }

  button {
    cursor: pointer;
    width: 42px;
    height: 42px;
    background-color: transparent;
    border-style: solid;
    border-color: rgba(255, 255, 255, 0.7);
    border-width: 1px;
    border-radius: 22px;
    margin-right: 10px;
  }

  #moreinfo > svg {
    position: relative;
    top: 2px;
  }

  #playtoggle {
    display: none;
  }

  #playtoggle > svg {
    position: relative;
    top: 1px;
    left: 1px;
  }

  #pausetoggle > svg {
    position: relative;
    top: 2px;
  }

  #fastforward > svg {
    position: relative;
    top: 2px;
    left: 1px;
  }

  #replay {
    display: none;
  }
</style>
<script>
  import {
    pauseAllAnimations,
    resumeAllAnimations,
    listenForAnimationComplete,
    fastForwardAnimations,
  } from "../lib/browser/animations";

  const controlContainer: HTMLDivElement | null =
    document.querySelector(".controls");

  const moreInfo: HTMLButtonElement | null =
    document.querySelector("#moreinfo");
  const overlayModal: HTMLButtonElement | null =
    document.querySelector("#overlay-modal");

  const pauseToggle: HTMLButtonElement | null =
    document.querySelector("#pausetoggle");

  const playToggle: HTMLButtonElement | null =
    document.querySelector("#playtoggle");

  const fastForward: HTMLButtonElement | null =
    document.querySelector("#fastforward");

  const replay: HTMLButtonElement | null = document.querySelector("#replay");

  if (
    !controlContainer ||
    !pauseToggle ||
    !playToggle ||
    !replay ||
    !fastForward
  ) {
    console.warn("cannot setup controls, no selector match");
  } else {
    controlContainer.style.display = "flex";

    let playing = true;

    const pause = () => {
      playing = false;
      pauseAllAnimations();
      pauseToggle.style.display = "none";
      playToggle.style.display = "block";
    };

    if (moreInfo && overlayModal) {
      moreInfo.addEventListener("click", () => {
        if (playing) {
          pause();
        }
        overlayModal.classList.add("modal-setup");
        requestAnimationFrame(() => {
          overlayModal.classList.add("modal-visible");
        });
      });
    }

    pauseToggle.addEventListener("click", pause);

    playToggle.addEventListener("click", () => {
      playing = true;
      resumeAllAnimations();
      pauseToggle.style.display = "block";
      playToggle.style.display = "none";
    });

    replay.addEventListener("click", () => {
      window.location.reload();
    });

    fastForward.addEventListener("click", () => {
      playing = false;
      fastForwardAnimations();
      pauseToggle.style.display = "none";
      playToggle.style.display = "none";
      fastForward.style.display = "none";
      replay.style.display = "block";
    });

    listenForAnimationComplete(() => {
      playing = false;
      replay.style.display = "block";
      pauseToggle.style.display = "none";
      replay.style.display = "block";
      fastForward.style.display = "none";
    });
  }
</script>
