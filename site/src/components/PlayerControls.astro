---

---

<div class="controls">
  <button id="pausetoggle" class="playing" title="Pause"></button>
</div>
<style>
  .controls {
    display: none;
    position: absolute;
    top: 30px;
    right: 30px;
    z-index: 300;
  }

  /* The value content-box tells the div to place any border on the outside, increasing the width or height. If we change this value to border-box, the border is added to the inside of the box. */
  button {
    position: relative;
    background-color: transparent;
    box-sizing: border-box;
    width: 0;
    height: 22px;
    border-style: solid;
    border-width: 10px 0 10px 18px;
    border-color: transparent transparent transparent rgba(255, 255, 255, 0.4);
    cursor: pointer;
    will-change: border-width;
    /* transition: all 0.2s ease; */

    &::after {
      position: absolute;
      top: -22px;
      left: -33px;
      border: 1px solid rgba(255, 255, 255, 0.4);
      width: 44px;
      height: 44px;
      border-radius: 30px;
      content: "";
    }

    &.playing {
      border-style: double;
      border-width: 0px 0 0px 20px;

      &::after {
        top: -12px;
      }
    }

    &:hover {
      border-color: transparent transparent transparent #fff;

      &::after {
        border-color: #fff;
      }
    }
  }
</style>
<script>
  import {
    toggleAnimationState,
    getAnimationState,
  } from "../lib/browser/animations";

  const controlContainer: HTMLDivElement | null =
    document.querySelector(".controls");

  const pauseToggle: HTMLButtonElement | null =
    document.querySelector("#pausetoggle");

  if (!controlContainer || !pauseToggle) {
    console.warn("cannot setup controls, no selector match");
  } else {
    controlContainer.style.display = "block";
    pauseToggle.addEventListener("click", () => {
      toggleAnimationState();
      if (getAnimationState() === "playing") {
        pauseToggle.classList.add("playing");
        pauseToggle.setAttribute("title", "Pause");
      } else {
        pauseToggle.classList.remove("playing");
        pauseToggle.setAttribute("title", "Play");
      }
    });
  }
</script>
