---
import type {Enabler, EnablerPost} from '../schemas/enabler'
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import AreaGraph from '../components/AreaGraph.astro'
import OpacityOverlay from '../components/OpacityOverlay.astro';
import {getTimelineConfig} from '../lib/timeline'
import {orderEarliestToLatest} from '../lib/posts'
import data from '../generated/data.json'

export async function getStaticPaths() {
  const enablerEntries = await getCollection('enabler');
  return enablerEntries.map(enabler => ({
    params: { slug: enabler.id }, props: {enabler: enabler.data},
  }));
}

interface Props {
  enabler: Enabler
}

const { enabler } = Astro.props;
const {dates} = data
const posts = orderEarliestToLatest(enabler.posts).filter(post => !post.skip)
const {dayDuration, postDelays} = getTimelineConfig({durationSeconds: enabler.playDurationSeconds, dates, posts })
console.log(postDelays, posts)

const postAnimStyle = (post: EnablerPost, index: number) => {
  return `animation-delay: ${postDelays[index]}s`
}

---
<Layout clip title={`genocide.club â€¢ ${enabler.name}`}>
  <main>
		<OpacityOverlay />
    <AreaGraph playDurationSeconds={enabler.playDurationSeconds} />
    <div class="scroll-top-fade" />
    <div class="posts">
      {posts.map((post, i) => (
        <div class="post" style={postAnimStyle(post, i)}>{post.text}</div>
        ))}
    </div>
	</main>
</Layout>

<style>
  .posts {
    z-index: 100;
    padding: 50px;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding-bottom: 700px;
    overflow: scroll;
  }

  .scroll-top-fade {
    z-index: 101;
    position: absolute;
    top: -200px;
    left: 0;
    right: 0;
    height: 200px;
    box-shadow: 10px 10px 50px rgba(10,10,10,1);
  }

  .post {
    opacity: 0;
    background-color: #eee;
    border-radius: 3px;
    margin-bottom: 20px;
    position: relative;
    left: -500px;
    width: 400px;
    padding: 10px;
    animation-duration: 1s;
    animation-name: fadein;
    animation-fill-mode: forwards;
    box-shadow: 5px 5px 10px rgba(10,10,10,0.1);
  }

  @keyframes fadein {
    from {
      opacity: 0;
      left: -500px;
    }

    to {
      opacity: 1;
      left: 0;
    }
  }

</style>

<script>
  const posts = document.querySelectorAll('.post')
  const postContainer = document.querySelector('.posts')
  if (postContainer) {
    posts.forEach(post => {
      post.addEventListener('animationstart', (event) => {
        // @ts-expect-error its ok
        const top = event.target.getBoundingClientRect().top - 50 + postContainer.scrollTop
        console.log('scroll>>', top, postContainer.scrollTop)
        postContainer.scrollTo({
          behavior: 'smooth',
          top
        })
      })
    })
  }
</script>
